<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.jyf.mapper.AAssetsMapper">
    
    <resultMap type="AAssets" id="AAssetsResult">
        <result property="id"    column="id"    />
        <result property="no"    column="no"    />
        <result property="name"    column="name"    />
        <result property="sort"    column="sort"    />
        <result property="picture"    column="picture"    />
        <result property="money"    column="money"    />
        <result property="quantity"    column="quantity"    />
        <result property="remark"    column="remark"    />
        <result property="position"    column="position"    />
        <result property="addtime"    column="addtime"    />
    </resultMap>

    <sql id="selectAAssetsVo">
        select id, no, name, sort, picture, money, quantity, remark, position, addtime from a_assets
    </sql>

    <select id="selectAAssetsList" parameterType="AAssets" resultMap="AAssetsResult">
        <include refid="selectAAssetsVo"/>
        <where>  
            <if test="no != null  and no != ''"> and no = #{no}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="sort != null  and sort != ''"> and sort = #{sort}</if>
            <if test="quantity != null "> and quantity = #{quantity}</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
        </where>
    </select>
    
    <select id="selectAAssetsById" parameterType="Long" resultMap="AAssetsResult">
        <include refid="selectAAssetsVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAAssets" parameterType="AAssets" useGeneratedKeys="true" keyProperty="id">
        insert into a_assets
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="no != null and no != ''">no,</if>
            <if test="name != null">name,</if>
            <if test="sort != null and sort != ''">sort,</if>
            <if test="picture != null">picture,</if>
            <if test="money != null">money,</if>
            <if test="quantity != null">quantity,</if>
            <if test="remark != null">remark,</if>
            <if test="position != null">position,</if>
            <if test="addtime != null">addtime,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="no != null and no != ''">#{no},</if>
            <if test="name != null">#{name},</if>
            <if test="sort != null and sort != ''">#{sort},</if>
            <if test="picture != null">#{picture},</if>
            <if test="money != null">#{money},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="remark != null">#{remark},</if>
            <if test="position != null">#{position},</if>
            <if test="addtime != null">#{addtime},</if>
         </trim>
    </insert>

    <update id="updateAAssets" parameterType="AAssets">
        update a_assets
        <trim prefix="SET" suffixOverrides=",">
            <if test="no != null and no != ''">no = #{no},</if>
            <if test="name != null">name = #{name},</if>
            <if test="sort != null and sort != ''">sort = #{sort},</if>
            <if test="picture != null">picture = #{picture},</if>
            <if test="money != null">money = #{money},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="position != null">position = #{position},</if>
            <if test="addtime != null">addtime = #{addtime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAAssetsById" parameterType="Long">
        delete from a_assets where id = #{id}
    </delete>

    <delete id="deleteAAssetsByIds" parameterType="String">
        delete from a_assets where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>